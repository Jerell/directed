.branchNode {
  .corner {
    --border-thickness: 1px;
    --outline-thickness: 0.5px;
    border: var(--border-thickness) solid var(--secondary);
    height: 10px;
    width: 10px;
    position: absolute;

    &::after {
      content: "";
      position: absolute;
      pointer-events: none;
      width: 10px;
      height: 10px;
      border: var(--outline-thickness) solid var(--brand-teal);
    }

    &[data-position="top-left"] {
      border-right: none;
      border-bottom: none;
      top: 0;
      left: 0;
    }
    &[data-position="top-left"]::after {
      top: calc(-1 * var(--border-thickness) - var(--outline-thickness));
      left: calc(-1 * var(--border-thickness) - var(--outline-thickness));
      border-right: none;
      border-bottom: none;
    }
    &[data-position="top-right"] {
      border-left: none;
      border-bottom: none;
      top: 0;
      right: 0;
    }
    &[data-position="top-right"]::after {
      top: calc(-1 * var(--border-thickness) - var(--outline-thickness));
      right: calc(-1 * var(--border-thickness) - var(--outline-thickness));
      border-left: none;
      border-bottom: none;
    }
    &[data-position="bottom-left"] {
      border-right: none;
      border-top: none;
      bottom: 0;
      left: 0;
    }
    &[data-position="bottom-left"]::after {
      bottom: calc(-1 * var(--border-thickness) - var(--outline-thickness));
      left: calc(-1 * var(--border-thickness) - var(--outline-thickness));
      border-right: none;
      border-top: none;
    }
    &[data-position="bottom-right"] {
      border-left: none;
      border-top: none;
      bottom: 0;
      right: 0;
    }
    &[data-position="bottom-right"]::after {
      bottom: calc(-1 * var(--border-thickness) - var(--outline-thickness));
      right: calc(-1 * var(--border-thickness) - var(--outline-thickness));
      border-left: none;
      border-top: none;
    }
  }
}

.branchHandle {
  --pointer-size: 10px;
  --edge-thickness: 1.5px;
  --pointer-rotation: 45deg; /* default points to the right */

  border-color: var(--brand-purple);
  background-color: var(--brand-purple);

  &::after {
    content: "";
    position: absolute;
    pointer-events: none;
    width: var(--pointer-size);
    height: var(--pointer-size);
    box-sizing: border-box;
    border: var(--edge-thickness) solid transparent;
    /* Always color the same two sides; rotate for direction */
    border-top-color: var(--brand-purple-bright);
    border-right-color: var(--brand-purple-bright);
  }

  &[data-position="left"]::after {
    left: calc(-1 * var(--pointer-size));
    top: 50%;
    transform: translateY(-50%) rotate(var(--pointer-rotation));
  }
  &[data-position="right"]::after {
    right: calc(-1 * var(--pointer-size));
    top: 50%;
    transform: translateY(-50%) rotate(var(--pointer-rotation));
  }
  &[data-position="top"]::after {
    top: calc(-1 * var(--pointer-size));
    left: 50%;
    transform: translateX(-50%) rotate(var(--pointer-rotation));
  }
  &[data-position="bottom"]::after {
    bottom: calc(-1 * var(--pointer-size));
    left: 50%;
    transform: translateX(-50%) rotate(var(--pointer-rotation));
  }

  &[data-handle-point-direction="right"]::after {
    --pointer-rotation: 45deg;
  }
  &[data-handle-point-direction="left"]::after {
    --pointer-rotation: 225deg;
  }
  &[data-handle-point-direction="up"]::after {
    --pointer-rotation: -45deg;
  }
  &[data-handle-point-direction="down"]::after {
    --pointer-rotation: 135deg;
  }

  /* when direction matches side, shift inward by 50% for visual alignment */
  &[data-position="right"][data-handle-point-direction="right"]::after {
    transform: translate(-50%, -50%) rotate(var(--pointer-rotation));
  }
  &[data-position="left"][data-handle-point-direction="left"]::after {
    transform: translate(50%, -50%) rotate(var(--pointer-rotation));
  }
  &[data-position="top"][data-handle-point-direction="up"]::after {
    transform: translate(-50%, 50%) rotate(var(--pointer-rotation));
  }
  &[data-position="bottom"][data-handle-point-direction="down"]::after {
    transform: translate(-50%, -50%) rotate(var(--pointer-rotation));
  }
}

.block {
  &[data-kind="source"] {
    background-color: var(--color-green-500);
  }
  &[data-kind="transform"] {
    background-color: var(--secondary);
  }
  &[data-kind="sink"] {
    background-color: var(--brand-blue);
  }
}
